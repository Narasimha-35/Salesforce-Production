<apex:page standardcontroller="vhc__Campaign__c" extensions="vhc.Ctrl10CallFileMemberAdd" tabstyle="vhc__Campaign__c" >
<!--<apex:includeScript value="{!$Resource.JQuery}"/>-->
  		
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/base/jquery-ui.css" type="text/css" />
<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.WS_Ressource, 'CSS/progress.css')}" /> 
  		
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js"></script>  

<apex:sectionHeader title="{!$ObjectType.vhc__Campaign__c.label} - {!campaign.name}" subtitle="{!$Label.Add_Members}">
	<div class="ptBreadcrumb">
		&nbsp;&nbsp;Â«&nbsp;
		
		<apex:outputLink value="/{!campaign.id}">{!$Label.Back_to_Campaign}: {!campaign.name}</apex:outputLink>
		</div>
</apex:sectionHeader>

<!-- Display page message at top of the page -->

<div style="padding:15px;">
	<apex:pageMessages id="msg"/> 
</div>

<div>

<apex:form id="myForm"> 


	<!-- JS for progress bar management -->

	<script>		
	    var isProgressbar = false;
	    
	    var isInProgress = false;
		function wait(op){
			if (op=='start'){
				isInProgress = true;
				document.body.style.cursor= "wait";
				return;
			} else {
				isInProgress = false;
				document.body.style.cursor="default";
			}
			document.body.scrollTop = 0;
		}
		
		function checkBatchStatus(){
		   var batchId =  $("#batchInput input").val();
		   if(batchId==""){
		   	log("No batch Id");
		   	return;
		   	}
			vhc.Ctrl10CallFileMemberAdd.getApexJobById(batchId,setBatchStatus,log);		
		}
		
		function setBatchStatus(res){
			if(!isProgressbar){
			    initProgressbar('batch');
				isProgressbar=true;
			}
			res= JSON.parse($("<div/>").html(res).text());
			setProgressbar('batch',res.JobItemsProcessed,res.TotalJobItems);
			$("#batchStatus").html(res.Status);
			$("#totalTask").html(res.TotalJobItems);
			$("#taskNumber").html(res.JobItemsProcessed);
			if(res.TotalJobItems==res.JobItemsProcessed ){
				// end of batch processing
				
				setSql();
				filterSearch();
				return;
			}
			
			setTimeout(checkBatchStatus,100);
		}
		
		// log to console if possible
		
		function log(res){
			if(typeof(console) !== 'undefined' && console != null) {
				//res= JSON.parse($("<div/>").html(res).text());
				console.log(res);
			}
		}
		
		// Init progress bar
	
		function initProgressbar(op){
			$("#progressbar_"+op ).progressbar({value: 0});  		
			
			// Set color
			
			var progressbar = $( "#progressbar_" + op );
        	var progressbarValue = progressbar.find( ".ui-progressbar-value" );
			progressbarValue.css({
         		"background": '#4E718F' 
        	});
		}
		
		// Change progress bar progression
		
		function setProgressbar(op,index,size){
			
			var pc = parseInt(100 - ( (index/size) * 100));
			
			if(size==0){
				pc = 0;
			} 		
	    	$("#progressbar_"+op).progressbar( "option", "value", 100-pc );		
		}
		
		$(document).ready(function(){
			var bId = '{!batchId}';
			if(bId){
				checkBatchStatus();
			}
		});
		
	</script>
	
	<style type="text/css"> 
		.sync_box input {
		    background:  #8DC117;
		    color: #FFFFFF;
		}
	</style>
	
	<apex:actionRegion >
		<apex:actionFunction name="addMembers" action="{!addMembers}" reRender="theTable , msg"  oncomplete="wait('end')"/>
		<apex:inputHidden value="{!selectedStatus}" id="selectedStatus"/> 
		<apex:inputHidden value="{!checkedIds}" id="checkedIds"/>
		<apex:inputHidden value="{!orderBY}" id="orderBY"/>
		<apex:inputHidden value="{!priority}" id="priority"/>
	</apex:actionRegion>
	
	<apex:outputpanel id="batch" styleClass="dn">
		<span id="batchInput"><apex:inputText value="{!batchId}" /></span>
	</apex:outputpanel>
	
	<div class="box" style="float: right">
	  <div class="sync_box">
		   <apex:commandbutton styleclass="create" action="{!RunAll}" value="Add All" rerender="batch , msg" oncomplete="checkBatchStatus()" onclick="if({!countQuery} >=49000){alert('Only first 49000 rows will be processed.');}$('#batchStatus').html('Starting')"/><br/>
		   <div id="progressbar_batch" class="bar"></div>
		   <div class="val_rslt">{!$Label.Job_Items_Processed}: <span class="counter" id="taskNumber">0</span > {!$Label.of} <span id="totalTask">0</span></div>
		   <div>{!$Label.Batch_Status}: <span id="batchStatus">{!$Label.Ready}</span></div>
	  </div>
	</div>
  
	<div class="dn">
		<a href="javascript:void(0)" onclick="checkBatchStatus()" >{!$Label.Check_Batch_Status}</a>
		<span id="setFiterObjectBtn" class="dn"><apex:commandbutton styleClass="filter_button" action="{!setFilterObject}" rerender="myForm" onclick="wait('start')" oncomplete="wait('end')"/></span>	
	</div>
	
	<br/>
	
	<apex:panelgroup id="filter">
	
		<!-- Radio to choose Contact/Lead/Opportunity mode -->
	
		<span id="filterOnObject">
			<apex:selectRadio value="{!filterObject}" onchange="wait('start'); $('#setFiterObjectBtn input').click(); " rendered="{!IsLeadPermission}">   
	         	   <apex:selectOptions value="{!ObjectOfFilterList}"/>             
	         </apex:selectRadio>
        </span>
    
        <br/>
        
        <!-- Filter Component -->
        
		<c:Filter f="{!filterComponent}"/>
		
		<!--  Save Filter Hidden fields -->
		
		<div class="dn">
			<apex:actionFunction name="filterSaveActionFunction" action="{!filterSave}" status="mySaveStatus"/>	
			
			<apex:outputLabel value="{!$Label.Filter_Name}"/> <apex:inputText style="margin-left:10px;" value="{!filterName}"  id="filterName"/>
			
			<script>
			function getSFInputFilterName() {
			  v = document.getElementById('{!$Component.filterName}');
			  return v;
			}
			</script>
			
			<apex:outputLabel value="{!$Label.Filter_Public}"/> <apex:inputCheckbox style="margin-left:10px;" value="{!isFilterPublic}" id="filterPublic"/>

			<script>
			function getSFCheckboxPublic() {
			  v = document.getElementById('{!$Component.filterPublic}');
			  return v;
			}
			</script>
		</div>
		
		<br/>
		
		<!--  Load an existing filter -->
		
		<span style="margin-right:10px;cursor: pointer; cursor: hand;" onClick="showDialogLoadFilter();"><apex:image rendered="{!filterSelectOptionList.size >0 }" alt="{!$Label.Filter_Button_Load}" title="{!$Label.Filter_Button_Load}" url="{!URLFOR($Resource.vhc__img, 'document-open.png')}"/></span>
		
		<!--  Save the current filter -->		

		<span style="margin-right:10px;cursor: pointer; cursor: hand;" onClick="setSql();showDialogSaveFilter(); "><apex:image alt="{!$Label.Filter_Button_Save}" title="{!$Label.Filter_Button_Save}" url="{!URLFOR($Resource.vhc__img, 'document-save.png')}" /></span>

		<!--  Delete an existing filter -->
		
		<span style="margin-right:10px;cursor: pointer; cursor: hand;" onClick="setSql();showDialogDeleteFilter(); "><apex:image rendered="{!filterSelectOptionList.size >0 }" alt="{!$Label.Filter_Button_Delete}" title="{!$Label.Filter_Button_Delete}" url="{!URLFOR($Resource.vhc__img, 'user-trash.png')}" /></span>

		<!--  Apply the current filter -->
		
		<apex:actionFunction name="filterSearch" action="{!go}" reRender="msg,theTable"/>
		<span id="applyFilter" style="margin-right:10px;cursor: pointer; cursor: hand;" onClick="setSql();filterSearch();"><apex:image alt="{!$Label.Filter_Apply}" title="{!$Label.Filter_Apply}" url="{!URLFOR($Resource.vhc__img, 'edit-find.png')}" /></span>

		<br/>
		<br/>
	</apex:panelgroup> 		

	<apex:pageBlock id="panelBlock" title="{!$Label.Campaign_Member}" mode="edit"> 
		<apex:pageBlockButtons id="blockButtons">
			<apex:outputText value="{!$ObjectType['vhc__Campaign_Member__c'].fields['vhc__Priority__c'].Label} : "/>
			<apex:selectList id="selectPriority" value="{!priority}" multiselect="false" size="1">
                <apex:selectOption itemValue="HIGH" itemLabel="HIGH"/>
                <apex:selectOption itemValue="MEDIUM" itemLabel="MEDIUM"/>
                <apex:selectOption itemValue="LOW" itemLabel="LOW"/>
            </apex:selectList>
        	<apex:commandButton onclick="addSelectedWithStatus();return false;" tabindex="0" id="addLabel" value="Add"/>
        </apex:pageBlockButtons>
	 
		<apex:panelgroup id="theTable">
			<apex:pageblocktable value="{!Records}" var="c" >
				<apex:column width="10px">
					<apex:facet name="header">
						<input type="checkbox" id="selectAllCB" onclick="selectAll(this);"/>
					</apex:facet>
						<input type="checkbox" id="cbtf_{!c.id}" value="{!c.id}" onclick="selectOne();"/>
				</apex:column>
				
						<apex:repeat value="{!contactFields}" var="field" >
							<apex:column rendered="{!filterObject=='Contact'}">
								<apex:facet name="header">
										<apex:commandLink action="{!sortRes}" reRender="theTable" onclick="setOrderBy(this);">
											<apex:outputPanel >
												<apex:outputLabel value="{!contactFieldsLabels[field]}" />
												<input type="hidden" value="{!c[field]}" />
											</apex:outputPanel>
										</apex:commandLink>
								</apex:facet>
								<apex:outputText value="{!c[field]}"/>
							</apex:column>
						</apex:repeat>

						<apex:repeat value="{!leadFields}" var="field"  >
							<apex:column rendered="{!filterObject=='Lead'}">
								<apex:facet name="header">
										<apex:commandLink action="{!sortRes}" reRender="theTable" onclick="setOrderBy(this);">
											<apex:outputPanel >
												<apex:outputLabel value="{!leadFieldsLabels[field]}" />
												<input type="hidden" value="{!field}" />
											</apex:outputPanel>
										</apex:commandLink>
								</apex:facet>
								<apex:outputText value="{!c[field]}"/>
							</apex:column>
						</apex:repeat>
						
						<apex:repeat value="{!opportunityFields}" var="field"  >
							<apex:column rendered="{!filterObject=='Opportunity'}">
								<apex:facet name="header">
										<apex:commandLink action="{!sortRes}" reRender="theTable" onclick="setOrderBy(this);">
											<apex:outputPanel >
												<apex:outputLabel value="{!opportunityFieldsLabels[field]}" />
												<input type="hidden" value="{!field}" />
											</apex:outputPanel>
										</apex:commandLink>
								</apex:facet>
								<apex:outputText value="{!c[field]}"/>
							</apex:column>
						</apex:repeat>
						
						<apex:repeat value="{!accountFields}" var="field"  >
							<apex:column rendered="{!filterObject=='Account'}">
								<apex:facet name="header">
										<apex:commandLink action="{!sortRes}" reRender="theTable" onclick="setOrderBy(this);">
											<apex:outputPanel >
												<apex:outputLabel value="{!accountFieldsLabels[field]}" />
												<input type="hidden" value="{!field}" />
											</apex:outputPanel>
										</apex:commandLink>
								</apex:facet>
								<apex:outputText value="{!c[field]}"/>
							</apex:column>
						</apex:repeat>
													
			</apex:pageblocktable>
	<br/>
	<div class="paginator"> 
		<span class="left">
			<span class="selectorTarget">
				<apex:outputpanel rendered="{!countQuery > 0}" layout="none">
				{!((setCon.PageSize*(setCon.PageNumber-1))+1)}-
				{!if((setCon.PageNumber*setCon.PageSize)>setCon.ResultSize,setCon.ResultSize,(setCon.PageNumber*setCon.PageSize))}
				{!$Label.of}  
				{!setCon.ResultSize}<apex:outputpanel rendered="{!countQuery > 5000}" layout="none">+</apex:outputpanel>	
				</apex:outputpanel> 
			</span>
		</span>
		<span class="prevNextLinks">
			<span class="prevNext">
				<apex:outputLabel rendered="{!!(setCon.PageNumber!=1)}" ><img class="firstoff" src="/s.gif"/></apex:outputLabel>
				<apex:commandLink action="{!setCon.first}" rerender="theTable" onclick="wait('start')" oncomplete="wait('end')" rendered="{!setCon.PageNumber!=1}"><img class="first" alt="{!$Label.First_Page}" title="{!$Label.First_Page}" src="/s.gif"/></apex:commandLink>
			</span>
			<span class="prevNext">
				<apex:outputLabel rendered="{!!setCon.HasPrevious}" ><img class="prevoff" src="/s.gif"/>{!$Label.Previous}</apex:outputLabel>
				<apex:commandLink action="{!setCon.previous}" rerender="theTable" onclick="wait('start')" oncomplete="wait('end')" rendered="{!setCon.HasPrevious}"><img class="prev" alt="{!$Label.Previous}" title="{!$Label.Previous}" src="/s.gif"/>{!$Label.Previous}</apex:commandLink>
			</span>
			<span class="prevNext">
				<apex:outputLabel rendered="{!!setCon.HasNext}" value="{!$Label.Next}"><img class="nextoff" src="/s.gif"/></apex:outputLabel>
				<apex:commandLink action="{!setCon.next}" rerender="theTable" onclick="wait('start')" oncomplete="wait('end')" rendered="{!setCon.HasNext}">{!$Label.Next}<img class="next" alt="{!$Label.Next}" title="{!$Label.Next}" src="/s.gif"/></apex:commandLink>
			</span>
			<span class="prevNext">
				<apex:outputLabel rendered="{!!setCon.HasNext}" ><img class="lastoff" src="/s.gif"/></apex:outputLabel>
				<apex:commandLink action="{!setCon.last}" rerender="theTable" onclick="wait('start')" oncomplete="wait('end')" rendered="{!setCon.HasNext}"><img class="last" alt="{!$Label.Last_Page}" title="{!$Label.Last_Page}" src="/s.gif"/></apex:commandLink>
			</span>
		</span>	
		<span class="right"></span>
	</div>
	
	

	
	</apex:panelgroup>
	</apex:pageBlock>

	<script type="text/javascript">
	
		String.prototype.startsWith = function(str){
		    return (this.indexOf(str) === 0);
		}
	
		function setOrderBy(obj){
			document.getElementById('{!JsEncode($Component.orderBY)}').value = obj.getElementsByTagName('input')[0].value ;
		}
	
		function  setCBIds(){
			if(isInProgress)
				return false;
			var pan = document.getElementById('{!JsEncode($Component.myForm.panelBlock.theTable)}');
			var input = document.getElementsByTagName('input');
			var num=0;			
			var cb ='' ;
			for (var i = 0 ; i < input.length ; i++){	
				if( input[i].id.startsWith("cbtf_"))
					if(input[i].type=="checkbox")
						if(input[i].checked){
						cb+=input[i].value+";";
						num++;
						}			 
			}
			document.getElementById('{!JsEncode($Component.checkedIds)}').value=cb.slice(0,-1);
			//alert(document.getElementById('{!$Component.checkedIds}').value);
			if(num==0){
				alert('Please select at least one record.');
				return false;
			}
			return true;
		}
		
		// Select all contact or lead displayed in the current page 
		
		function selectAll(obj){
			var value = obj.checked;
			var pan = document.getElementById('{!JsEncode($Component.myForm.panelBlock.theTable)}');
			var input = document.getElementsByTagName('input');
			var num=0;			
			var cb ='' ;
						
			for (var i = 0 ; i < input.length ; i++){	
				if( input[i].id.startsWith("cbtf_")) {
					if(input[i].type=="checkbox") {
						input[i].checked=value;	 
					}
				}
			}
		}
		
		function selectOne(){
			document.getElementById('selectAllCB').checked=false;
		}
		
		function addSelectedWithStatus(){
			if(setCBIds())
			{
				//document.getElementById('{!JsEncode($Component.selectedStatus)}').value = obj;
				
				 document.getElementById('{!$Component.myForm.priority}').value=document.getElementById('{!$Component.myForm.panelBlock.blockButtons.selectPriority}').value;
				 wait('start');
				 addMembers();
			}
		}
		
		
		var idTheTable = '{!$Component.myForm.panelBlock.theTable}';
		var idPrio = '{!$Component.myForm.panelBlock.blockButtons.selectPriority}';
		var idForm = '{!$Component.myForm}';
		var idFilter1 = '{!$Component.filter}';
		var idFilter2 = '{!$Component.myForm.filter}';
		var idPriority = '{!$Component.priority}';
	</script>
	
	
</apex:form>
</div>

<!--  Save filter dialog management -->

<script>
function showDialogSaveFilter() {
	$("#dialogSaveFilter" ).dialog(
		{	modal: true,
			buttons: {
		        "Cancel": function() {
					$( this ).dialog( "close" );
		        },
		        "Ok": function() {
		        	if ( document.getElementById("dialogFilterNameInput").value == '' ) {
		        		
		        		// Filter name is mandatory, so tell the user to write this parameter
		        		
		        		alert('{!$Label.Filter_Name_Mandatory}');
		        		return;
		        	} else {
						
						// We use the main SF form to get refresh of filter object while saving (issue when using Jquery UI in main form directly)
		        		
		        		setSql();
		        		getSFInputFilterName().value 	= document.getElementById("dialogFilterNameInput").value ;
		        		getSFCheckboxPublic().checked 	= document.getElementById("dialogFilterIsPublicCheckbox").checked ;
			        	filterSaveActionFunction();
			          	$(this).dialog( "close" );
			        }
		        }
		    }
    	}
	);	
}
</script>

<div id="dialogSaveFilter" title="{!$Label.Filter_Save_Dialog_Title}" style="display:none">
	<apex:outputLabel value="{!$Label.Filter_Name}"/>
	<input type="text" id="dialogFilterNameInput"/>	
	<apex:outputLabel value="{!$Label.Filter_Public}"/>
	<input type="checkbox" checked="checked" id="dialogFilterIsPublicCheckbox"/>
</div>

<!--  Load filter dialog management -->

<script>
function showDialogLoadFilter() {
	$("#dialogLoadFilter" ).dialog(
		{	modal: true,
			buttons: {
		        "Cancel": function() {
		          $( this ).dialog( "close" );
		        },
		        "Ok": function() {
		        	filterLoadActionFunction();
		          	$( this ).dialog( "close" );
		        }
		    }
    	}
	);	
}
</script>

<div id="dialogLoadFilter" title="{!$Label.Filter_Load_Dialog_Title}" style="display:none">
	<div>	
		<apex:form id="dialogLoadFilterForm">
			<apex:actionRegion >
				<apex:actionFunction name="filterLoadActionFunction" action="{!filterLoad}" status="myLoadStatus" />
				<apex:outputLabel value="{!$Label.Filter_Name}"/>  
				<apex:selectList style="margin-left:10px;" id="filterId" value="{!filterId}" multiselect="false" size="1">
		            <apex:selectOptions value="{!filterSelectOptionList}"/>
		        </apex:selectList>
		    </apex:actionRegion>
		</apex:form>   
  	</div>
</div>

<!--  Delete filter dialog management -->

<script>
function showDialogDeleteFilter() {
	$("#dialogDeleteFilter" ).dialog(
		{	modal: true,
			buttons: {
		        "Cancel": function() {
		          $( this ).dialog( "close" );
		        },
		        "Ok": function() {
		        	filterDeleteActionFunction();
		          	$( this ).dialog( "close" );
		        }
		    }
    	}
	);	
}
</script>

<div id="dialogDeleteFilter" title="{!$Label.Filter_Delete_Dialog_Title}" style="display:none;">
	<div>
		<apex:form id="dialogDeleteFilterForm">
			<apex:actionRegion >
				<apex:actionFunction name="filterDeleteActionFunction" action="{!filterDelete}" status="myDeleteStatus" />	
				<apex:outputLabel value="{!$Label.Filter_Name}"/> 	
				<apex:selectList style="margin-left:10px;" id="filterToDeleteId" value="{!filterToDeleteId}" multiselect="false" size="1">
		            <apex:selectOptions value="{!filterSelectOptionList}"/>
		        </apex:selectList>
		    </apex:actionRegion>
		</apex:form>   
  	</div>
</div>

</apex:page>