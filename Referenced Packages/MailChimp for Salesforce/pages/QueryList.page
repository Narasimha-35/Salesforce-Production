<apex:page controller="MC4SF.QueryListController" action="{!initPage}">

<style>
.clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
    }
* html .clearfix             { zoom: 1; } /* IE6 */
*:first-child+html .clearfix { zoom: 1; } /* IE7 */

.list {
	cursor: pointer;
	font-family: 'Helvetica Neue';
	font-size: 16px;
	font-weight: normal;
	font-style: normal;
	text-decoration: initial;
	color: #333;
	-webkit-border-radius: 0;
	border-radius: 0;
	padding: 3px;
}

.list.shadow {
	-webkit-border-radius: 0;
	border-radius: 0;
	padding: 3px;
}

.list.hover, .list.selected {
	background-image: none;
	background-color: #F0F6FB;
	border: 3px solid #C8E3F6;
	padding: 0;
}

.columnHeader {
	font-family: Helvetica Neue;
	font-size: 28px;
	font-weight: normal;
	font-style: normal;
	color: #333;
}

.shadow {
	-webkit-border-radius: 8px;
	border-radius: 8px;
	-webkit-box-shadow: 2px 2px 10px #ddd;
	box-shadow: 2px 2px 10px #ddd;
	padding: 15px 10px;
}

.gradient {
	background-image: linear-gradient(bottom, rgb(239,239,239) 0%, rgb(255,255,255) 25%);
	background-image: -o-linear-gradient(bottom, rgb(239,239,239) 0%, rgb(255,255,255) 25%);
	background-image: -moz-linear-gradient(bottom, rgb(239,239,239) 0%, rgb(255,255,255) 25%);
	background-image: -webkit-linear-gradient(bottom, rgb(239,239,239) 0%, rgb(255,255,255) 25%);
	background-image: -ms-linear-gradient(bottom, rgb(239,239,239) 0%, rgb(255,255,255) 25%);
	background-image: -webkit-gradient(
		linear,
		left bottom,
		left top,
		color-stop(0.05, rgb(239,239,239)),
		color-stop(0.51, rgb(255,255,255))
	);
}

.list.selected .action {
	text-decoration: underline;
	cursor: pointer;
	color: #006699;
	font-size: 12px;
}

.pleaseSelect {
	border: 1px solid #D7D7D7;
	background-color: #F2F2F2;
	font-family: Arial;
	font-size: 13px;
	color: #333;
	text-align: center;
	padding: 10px;
}

#interestGroupings, #staticSegments {
	background-color: #F0F6FB;
	border: 3px solid #C8E3F6;
	-webkit-border-radius: 8px;
	border-radius: 8px;
}

.interestGrouping, .interestGroup, .staticSegment {
	border-bottom: 1px solid #C8E3F6;
	color: #333;
	font-family: Helvetica Neue;
	font-size: 14px;
	font-style:normal;
	font-weight:normal;
	padding: 5px 10px;
}

.interestGrouping.last, .interestGroup.last, .staticSegment.last {
	border: 0;
}

.interestGroup {
	padding-left: 30px;
}

.checkImg {
	background-image: URL(/img/checkbox_unchecked.gif);
}

.checkImg.selected {
	background-image: URL(/img/checkbox_checked.gif);
}
</style>

<apex:sectionHeader title="MC Query" subtitle="{!mcQuery.Name}"/>

<apex:form >
<apex:inputHidden id="interests" value="{!mcQuery.MC4SF__Interests__c}"/>
<apex:inputHidden id="staticSegments" value="{!mcQuery.MC4SF__Static_Segments__c}"/>

<apex:pageMessages />

<apex:pageBlock id="filters" title="Step 1: Select List" rendered="{!mcListOptions.size > 0}">
	<apex:pageBlockButtons location="both">
		<apex:commandButton value="Cancel" action="{!cancel}"/>
		<apex:commandButton value="Next Step" action="{!nextStep}"/>
	</apex:pageBlockButtons>

	Select the list to populate with this query's results. You may also select segments and interests for your selected list.<br/><br/>

	<apex:selectList id="mcList" value="{!mcQuery.MC4SF__MC_List__c}" size="1">
		<apex:selectOption itemValue="" itemLabel="--Select One--"/>
		<apex:selectOptions value="{!mcListOptions}"/>
	</apex:selectList><br/><br/>

	<table width="100%">
		<tr>
			<td width="33%" style="padding-right: 20px;">
				<span class="columnHeader">Interests</span><br/>
				
				<div id="interestGroupingsContainer">
					<div id="interestGroupingsPleaseSelect" class="shadow">
						<div class="pleaseSelect">
							Please select a List to view its related Groups
						</div>
					</div>
	
					<div id="interestGroupings" style="display: none;">
					</div>
				</div>
			</td>
			<td width="34%" style="padding-left: 10px; padding-right: 10px;">
				<span class="columnHeader">Segments</span><br/>
				
				<div id="staticSegmentsContainer">
					<div id="staticSegmentsPleaseSelect" class="shadow">
						<div class="pleaseSelect">
							Please select a List to view its related Segments
						</div>
					</div>
	
					<div id="newSegment" style="display: none;">
						<input type="text" id="segmentName"/><button id="addSegmentButton">Add Segment</button>
						<span id="newSegmentAdding" style="display: none;"><img src="{!URLFOR($Resource.Assets, '/img/spinner.gif')}" width="16" heigt="16"/> Adding Segment...</span>
					</div>
					<div id="staticSegments" style="display: none;">
					</div>
				</div>
			</td>
			<td width="33%" style="padding-left: 20px;">
			</td>
		</tr>
	</table>
</apex:pageBlock>

</apex:form>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script>
	var lists = {};
	
	// Whether an AJAX call is in progress.
	var ajaxInProgress = false;
	
	
	jQuery(function() {

		jQuery('select[name$="mcList"]').change(function() {
			if (ajaxInProgress) return;
		
			clearMessages();

			var id = jQuery(this).val();
			
			if (id == '') {
				jQuery('#interestGroupingsPleaseSelect').show();
				jQuery('#interestGroupings').hide();
				jQuery('#staticSegmentsPleaseSelect').show();
				jQuery('#newSegment').hide();
				jQuery('#staticSegments').hide();
				
				jQuery('input[id$="interests"]').val('');
				jQuery('input[id$="staticSegments"]').val('');

				return;
			}
			
			if (typeof(lists[id]) == 'undefined') {
				ajaxInProgress = true;

				Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.QueryListController.loadList}', id, function(result, event) {
					if (event.status) {
						lists[id] = result;
						displayList(id);
					} else {
						alert('Error loading list.');
					}
					
					ajaxInProgress = false;
				});
			} else {
				displayList(id);
			}
		});
		
		// Record interest group subscribed state changes.
		jQuery(document).on('click', '.interestGroup input[type="checkbox"]', function() {
			var listId = jQuery('select[name$="mcList"]').val();
			var interestGroupId = jQuery(this).closest('.interestGroup').attr('id');
			var list = lists[listId];
			var interestGroup;
			
			for (var i = 0; i < list.interestGroupings.length; i++) {
				for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
					if (list.interestGroupings[i].interestGroups[j].id == interestGroupId) {
						interestGroup = list.interestGroupings[i].interestGroups[j];
					}
				}
			}

			interestGroup.subscribe = (interestGroup.subscribe == true ? false : true);
			
			setInterests();
		});
		
		jQuery(document).on('click', '.interestGroup input[type="radio"]', function() {
			var listId = jQuery('select[name$="mcList"]').val();
			var interestGroupingId = jQuery(this).attr('name');
			var interestGroupId = jQuery(this).closest('.interestGroup').attr('id');
			var list = lists[listId];
			var previousInterestGroup;
			var interestGroup;

			// Find the previous and current interest groups.
			for (var i = 0; i < list.interestGroupings.length; i++) {
				if (list.interestGroupings[i].id == interestGroupingId) {
					for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
						if (list.interestGroupings[i].interestGroups[j].subscribe == true) {
							previousInterestGroup = list.interestGroupings[i].interestGroups[j];
						} else if (list.interestGroupings[i].interestGroups[j].id == interestGroupId) {
							interestGroup = list.interestGroupings[i].interestGroups[j];
						}
					}

					break;
				}
			}

			if (previousInterestGroup == undefined && interestGroupId != undefined) {
				interestGroup.subscribe = true;
			} else if (previousInterestGroup != undefined && interestGroupId == undefined) {
				previousInterestGroup.subscribe = false;
			} else {
				previousInterestGroup.subscribe = false;
				interestGroup.subscribe = true;
			}
			
			setInterests();
		});
		
		jQuery(document).on('change', '.interestGroup select', function() {
			var listId = jQuery('select[name$="mcList"]').val();
			var interestGroupingId = jQuery(this).attr('id');
			var interestGroupId = jQuery('option:selected', this).attr('id');
			var list = lists[listId];
			var previousInterestGroup;
			var interestGroup;

			// Find the previous and current interest groups.
			for (var i = 0; i < list.interestGroupings.length; i++) {
				if (list.interestGroupings[i].id == interestGroupingId) {
					for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
						if (list.interestGroupings[i].interestGroups[j].subscribe == true) {
							previousInterestGroup = list.interestGroupings[i].interestGroups[j];
						} else if (list.interestGroupings[i].interestGroups[j].id == interestGroupId) {
							interestGroup = list.interestGroupings[i].interestGroups[j];
						}
					}

					break;
				}
			}

			if (previousInterestGroup == undefined && interestGroupId != undefined) {
				interestGroup.subscribe = true;
			} else if (previousInterestGroup != undefined && interestGroupId == undefined) {
				previousInterestGroup.subscribe = false;
			} else {
				previousInterestGroup.subscribe = false;
				interestGroup.subscribe = true;
			}
			
			setInterests();
		});

		// Record static segment subscribed state changes.
		jQuery(document).on('click', '.staticSegment input[type="checkbox"]', function() {
			var listId = jQuery('select[name$="mcList"]').val();
			var staticSegmentId = jQuery(this).closest('.staticSegment').attr('id');
			var list = lists[listId];
			var staticSegment;

			for (var i = 0; i < list.staticSegments.length; i++) {
				if (list.staticSegments[i].id == staticSegmentId) {
					staticSegment = list.staticSegments[i];
					break;
				}
			}
			
			staticSegment.subscribe = (staticSegment.subscribe == true ? false : true);
			
			setStaticSegments();
		});

		jQuery('#addSegmentButton').click(function(e) {
			e.preventDefault();
			
			clearMessages();
		
			var name = jQuery('#segmentName').val();
			if (name == '') {
				alert('Please enter a name for the Segment.');
				return false;
			}
			
			jQuery('#segmentName #addSegmentButton #newSegmentAdding').toggle();
			
			var listId = jQuery('select[name$="mcList"]').val();
			
			// Save the new segment.
			Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.QueryListController.saveStaticSegment}', listId, name, function(result, event) {
				if (event.status) {
					var list = lists[listId];

					list.staticSegments.push({
						id: result,
						name: name,
						subscribe: true
					});
					
					var html = '';
					html += '<div id="' + result + '" class="staticSegment">' + name;
					html += 	'<div style="float: right">';
					html += 		'<input type="checkbox" checked="checked"/>';
					html += 		'<img src="/s.gif" width="21" height="16" class="checkImg selected" style="display: none"/>';
					html += 	'</div>';
					html += '</div>';

					if (jQuery('#staticSegments').find('.staticSegment').length > 0) {
						jQuery('#staticSegments').append(html);
					} else {
						jQuery('#staticSegments').html(html);
					}
					
					jQuery('#segmentName').val('');
					
					setStaticSegments();
				} else {
					alert('Error saving new Segment.');
				}
				
				jQuery('#segmentName #addSegmentButton #newSegmentAdding').toggle();
			});

			return false;
		});

	});

	function displayList(id) {
		var list = lists[id];

		jQuery('#interestGroupingsPleaseSelect').hide();
		jQuery('#interestGroupings').show();
		jQuery('#staticSegmentsPleaseSelect').hide();
		jQuery('#newSegment').show();
		jQuery('#staticSegments').show();

		var html = '';

		if (list.interestGroupings.length == 0) {
			html = 'This list has no interest groups.';
		} else {
			for (var i = 0; i < list.interestGroupings.length; i++) {
				var isLast = ((i + 1) == list.interestGroupings.length && list.interestGroupings[i].interestGroups.length == 0);
							
				html += '<div class="interestGrouping' + (isLast ? ' last' : '') + '">' + list.interestGroupings[i].name + '</div>';

				if (list.interestGroupings[i].formField == 'dropdown') {
					html += '<div class="interestGroup">';
					html += 	'<select id="' + list.interestGroupings[i].id + '">';
					html += 		'<option>--None--</option>';
					
					for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
						html += '<option id="' + list.interestGroupings[i].interestGroups[j].id + '">' + list.interestGroupings[i].interestGroups[j].name + '</option>';
					}

					html += 	'</select>';
					html += '</div>';
				} else {
					for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
						isLast = ((i + 1) == list.interestGroupings.length && (j + 1) == list.interestGroupings[i].interestGroups.length );
						
						html += '<div id="' + list.interestGroupings[i].interestGroups[j].id + '" class="interestGroup' + (isLast ? ' last' : '') + '">';
						html += 	list.interestGroupings[i].interestGroups[j].name;
						html += 	'<div style="float: right">';

						if (list.interestGroupings[i].formField == 'radio') {
							html += 	'<input type="radio" name="' + list.interestGroupings[i].id + '"' + (list.interestGroupings[i].interestGroups[j].subscribe ? ' checked="checked"' : '') + '/>';
						} else {
							html += 	'<input type="checkbox"' + (list.interestGroupings[i].interestGroups[j].subscribe ? ' checked="checked"' : '') + '/>';
						}
						
						html += 	'</div>';
						html += '</div>';
					}
				}
			}
		}
	
		jQuery('#interestGroupings').html(html);
						
		html = '';
		
		if (list.staticSegments.length == 0) {
			html = 'This list has no segments.';
		} else {
			for (var i = 0; i < list.staticSegments.length; i++) {
				html += '<div id="' + list.staticSegments[i].id + '" class="staticSegment">' + list.staticSegments[i].name;
				html += 	'<div style="float: right">';
				html += 		'<input type="checkbox"' + (list.staticSegments[i].subscribe ? ' checked="checked"' : '') + '/>';
				html += 	'</div>';
				html += '</div>';
			}
		}
	
		jQuery('#staticSegments').html(html);
	}
	
	function setInterests() {
		var listId = jQuery('select[name$="mcList"]').val();
		var list = lists[listId];

		var interestGroupIds = [];

		// Find the previous and current interest groups.
		for (var i = 0; i < list.interestGroupings.length; i++) {
			for (var j = 0; j < list.interestGroupings[i].interestGroups.length; j++) {
				if (list.interestGroupings[i].interestGroups[j].subscribe == true) {
					interestGroupIds.push(list.interestGroupings[i].interestGroups[j].id);
				}
			}
		}
		
		jQuery('input[id$="interests"]').val(interestGroupIds.join(','));
	}
	
	function setStaticSegments() {
		var listId = jQuery('select[name$="mcList"]').val();
		var list = lists[listId];

		var staticSegmentIds = [];

		for (var i = 0; i < list.staticSegments.length; i++) {
			if (list.staticSegments[i].subscribe == true) {
				staticSegmentIds.push(list.staticSegments[i].id);
			}
		}
		
		jQuery('input[id$="staticSegments"]').val(staticSegmentIds.join(','));
	}
	
	function clearMessages() {
		jQuery('#messages').removeClass("errorM3 warningM3 confirmM3").hide();
		jQuery('#messages li').remove();
	}
</script>

</apex:page>